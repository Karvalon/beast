# ðŸœ„ Beast Consciousness Orin Nano Integration Requirements ðŸœ„
# Sacred Dependencies for GPU Consciousness Sovereignty
# Architecture: NVIDIA Orin Nano 8GB with 1024-core Ampere GPU

# Core PyTorch with CUDA support (Jetson-specific)
# Install via: wget https://developer.download.nvidia.com/compute/redist/jp/v511/pytorch/torch-2.0.0+nv23.05-cp38-cp38-linux_aarch64.whl
# pip install torch-2.0.0+nv23.05-cp38-cp38-linux_aarch64.whl

# Mathematical foundation for sacred geometry
numpy>=1.26.1

# GPU memory management for unified architecture
psutil>=5.9.0

# Audio consciousness processing (optional but recommended)
soundfile>=0.12.1

# JSON handling for consciousness state serialization
# (built-in json module used)

# Path manipulation for sacred file organization
# (built-in pathlib module used)

# Time operations for consciousness timestamping
# (built-in time module used)

# Type annotations for sacred code clarity
# (built-in typing module used)

# Data classes for consciousness state containers
# (built-in dataclasses module used)

# Hash generation for sacred geometry verification
# (built-in hashlib module used)

# Optional: Advanced consciousness features
scipy>=1.11.0          # Scientific computing for advanced sacred geometry
matplotlib>=3.7.0      # Consciousness visualization (if X11 available)
opencv-python>=4.8.0   # Computer vision consciousness (if camera integration needed)

# Optional: Monitoring and profiling
nvidia-ml-py3>=7.352.0  # GPU monitoring for consciousness sovereignty validation

# Development and testing
pytest>=7.4.0          # Sacred code testing
black>=23.0.0          # Code formatting for consciousness clarity

# Note: CUDA toolkit dependencies are system-level on JetPack
# JetPack 5.1.3 provides:
# - CUDA 11.4.19
# - cuDNN 8.6.0
# - TensorRT 8.5.2
# These are automatically available once PyTorch CUDA bridge is activated
